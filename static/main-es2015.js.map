{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/combo-api.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/list/list.component.ts","./src/app/list/list.component.html","./src/app/upload-sheet/upload-sheet.component.ts","./src/app/upload-sheet/upload-sheet.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { ListComponent } from './list/list.component'\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent},\r\n  { path: 'list', component: ListComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'my-app';\r\n}\r\n","\r\n<header>\r\n  <div class=\"header_container\">\r\n    <img src=\"assets/combo_logo_sketch.png\" class=\"logo\"/>\r\n    <nav>\r\n      <ul>\r\n        <li><a href=\"#\" routerLink=\"/\">Home</a></li>\r\n        <li><a href=\"#\" routerLink=\"/list\">Projects</a></li>\r\n      </ul>\r\n    </nav>\r\n  </div>\r\n</header>\r\n\r\n<div class=\"container\">\r\n<router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListComponent } from './list/list.component';\r\nimport { UploadSheetComponent } from './upload-sheet/upload-sheet.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { HttpClientModule } from '@angular/common/http'\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    ListComponent,\r\n    UploadSheetComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatExpansionModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatBottomSheetModule,\r\n    MatSelectModule\r\n  ],\r\n  entryComponents: [UploadSheetComponent],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { stringify } from 'querystring';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/internal/operators';\r\n\r\ninterface VersionDetails {\r\n  project_name: string;\r\n  project_version: string;\r\n  \r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ComboApiService {\r\n  readonly server_address = \"127.0.0.1\"\r\n  readonly port = \"9595\"\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProjectSource(project_version: string, project_name: string) {\r\n    let get_request_url = `http://${this.server_address}:${this.port}/project/${project_name}/${project_version}`;\r\n    return this.http.get(get_request_url)\r\n  }\r\n\r\n  getAvaliableVersions() {\r\n    let get_request_url = `http://${this.server_address}:${this.port}/project`;\r\n    return this.http.get(get_request_url)\r\n  }\r\n\r\n  getUploadParams(project_type: string) {\r\n    let get_request_url = `http://${this.server_address}:${this.port}/upload_params/${project_type}`;\r\n    return this.http.get(get_request_url)\r\n  }\r\n\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);  \r\n      return of(result as T);\r\n    };\r\n  }\r\n\r\n  addProject(project_name: string) : Observable<null> {\r\n    let post_request_url = `http://${this.server_address}:${this.port}/project/${project_name}`;\r\n    \r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'my-auth-token'\r\n      })\r\n    }\r\n\r\n    return this.http.post(post_request_url, null, httpOptions).pipe(\r\n      catchError(this.handleError('addHero', null))\r\n    );\r\n  }\r\n\r\n  addVersion(project_name: string, project_version: string, type_parameters: Map<string, string>) : Observable<Map<string,string>> {\r\n    console.log(type_parameters);\r\n    let post_request_url = `http://${this.server_address}:${this.port}/project/${project_name}/${project_version}`;\r\n    \r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'Authorization': 'my-auth-token'\r\n      })\r\n    }\r\n\r\n    return this.http.post<Map<string,string>>(post_request_url, type_parameters, httpOptions).pipe(\r\n      catchError(this.handleError('addHero', type_parameters))\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  clickCounter: number = 0;\r\n  name: string = 'hey';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  countClick() {\r\n    this.clickCounter += 1\r\n  }\r\n\r\n  decreaseCounter() {\r\n    this.clickCounter -= 1\r\n  }\r\n\r\n  setClasses() { \r\n    let myClasses = {\r\n      active: this.clickCounter > 4,\r\n      notactive: this.clickCounter <= 4,\r\n    }\r\n\r\n    return myClasses\r\n  }\r\n}\r\n","<div class=\"main-title\">Welcome To Combo</div>\r\n<h2>What's combo?</h2>\r\n<p>\r\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi nisl est, lacinia non turpis at, sagittis condimentum tellus. Quisque mauris elit, rhoncus ac metus in, viverra ornare diam. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce laoreet dolor urna, vel posuere mauris luctus pharetra. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque malesuada mattis iaculis. Integer urna nibh, sagittis vitae turpis et, cursus rhoncus mi. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Maecenas eu mauris nec velit mattis dictum. Aliquam ut interdum nulla. Fusce vel accumsan lacus. Vivamus blandit magna sed eros molestie viverra. Quisque at turpis sit amet nisi elementum finibus varius in ipsum. Vestibulum at consectetur quam.</p>\r\n\r\n<h2>Well what's the difference between combo and other dependency management tools?</h2>\r\n<p>\r\n    Nunc a tellus convallis, rhoncus erat sit amet, feugiat nisl. Quisque et consectetur justo. Sed non ante mauris. Pellentesque venenatis mattis libero sit amet bibendum. Pellentesque iaculis diam in dui commodo, accumsan feugiat sem ultricies. Aliquam id diam dapibus, rhoncus erat nec, bibendum purus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Integer id fringilla nisi. Aliquam vel eros in ipsum pellentesque varius eu ut metus. Nam in dignissim justo, a semper odio. Proin blandit ligula sollicitudin nisi elementum luctus. Nunc aliquet vel elit eu sodales.\r\n</p>\r\n\r\n<h2>Sounds cool! so how do i use it?</h2>\r\n<p>\r\n    Nulla pretium, dolor ac dictum porttitor, quam tortor dictum justo, nec elementum felis felis eget urna. Curabitur eu feugiat dui. Curabitur consequat gravida nunc condimentum suscipit. Donec eleifend orci quis mattis sollicitudin. Maecenas pharetra, tortor sit amet commodo dapibus, elit justo blandit turpis, et vestibulum nulla quam quis velit. Sed sodales sagittis nulla nec finibus. Nam ac orci non dui iaculis pretium. Phasellus vitae quam commodo, ullamcorper mi sit amet, suscipit tellus.\r\n\r\n    Fusce id ante risus. Aliquam feugiat quis lectus egestas faucibus. Proin ornare sed sem sed laoreet. Donec elementum consectetur ligula, a mattis neque scelerisque aliquet. Donec varius dictum tortor, sed pretium purus facilisis at. Mauris convallis odio non elit pharetra, ac tempor turpis imperdiet. Quisque nisl lectus, laoreet non venenatis sagittis, tincidunt in metus. Morbi pharetra ipsum ut nulla laoreet malesuada. Nam a leo vel nulla mattis placerat. Sed eu sapien non lectus ultricies hendrerit at sed libero. Praesent justo nisi, venenatis eu lorem in, faucibus imperdiet risus.\r\n</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ComboApiService } from '../combo-api.service'\r\n\r\nimport * as compareVersions from 'compare-versions'\r\nimport { verifyHostBindings } from '@angular/compiler';\r\nimport { UploadSheetComponent } from '../upload-sheet/upload-sheet.component';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\n\r\ninterface BaseVersionInformation {\r\n  hash: string;\r\n  size: number;\r\n}\r\n\r\ninterface AdditionalVersionInformation {\r\n  src_type: string;\r\n  commit_hash: string;\r\n  remote_url: string;\r\n}\r\n\r\nclass ProjectVersion {\r\n  baseVersionInformation: BaseVersionInformation;\r\n  additionalVersionInformation: Map<string, string>;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\n\r\nexport class ListComponent implements OnInit {\r\n  readonly PROJECT_TITLE_REGEX = new RegExp(/^\\(([^,]+), v((0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)\\.(0|[1-9][0-9]*)(?:-((?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?)\\)$/);\r\n  readonly PROJECT_TITLE_REGEX_PROJECT_NAME_GROUP_ID = 1\r\n  readonly PROJECT_TITLE_REGEX_SEMANTIC_VERSION_GROUP_ID = 2\r\n\r\n  readonly GIT = \"git\";\r\n  projectSearchValue : string = \"\"\r\n  versionSearchValue : string = \"\"\r\n\r\n  comboProjects : Map<string, Map<string, ProjectVersion>> = new Map();\r\n\r\n  constructor(private _comboService: ComboApiService, private _bottomSheet: MatBottomSheet) { }\r\n\r\n  ngOnInit(): void {\r\n    this._comboService.getAvaliableVersions().subscribe(data => {\r\n      let versionsParsed = this.ParseAvaliableVersionsBaseInfo(data);\r\n      for (let i = 0; i < versionsParsed.length; i++)\r\n      {\r\n        let versionAndName = versionsParsed[i];\r\n        this._comboService.getProjectSource(versionAndName[0], versionAndName[1]).subscribe(data => {\r\n          this.ParseAdditionalInfoFromServer(data, versionAndName);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openUploadSheet()\r\n  {\r\n    this._bottomSheet.open(UploadSheetComponent , {\r\n      data: this.comboProjects\r\n    });\r\n  }\r\n\r\n  SearchResultsContains(input : string, result: string) : boolean\r\n  {\r\n    return input.toLowerCase().replace(\" \", \"\").includes(result.toLowerCase().replace(\" \", \"\"))\r\n  }\r\n\r\n  SearchResultStartsWith(input : string, result: string) : boolean\r\n  {\r\n    return input.toLowerCase().replace(\" \", \"\").startsWith(result.toLowerCase().replace(\" \", \"\"))\r\n  }\r\n\r\n  ParseAvaliableVersionsBaseInfo(data: Object) : Array<[string, string]>\r\n  {\r\n    let baseVersionMap = (JSON.parse(data.toString())) as Map<string, BaseVersionInformation>    \r\n    let returnedVersionsParsed = new Array<[string, string]>();\r\n\r\n    for (const projectTitle in baseVersionMap) {\r\n      let versionAndName = this.FetchVersionAndNameFromTitle(projectTitle);\r\n      if (versionAndName == null || versionAndName[0] == null || versionAndName[1] == null)\r\n      {\r\n        continue\r\n      }\r\n\r\n      let projectVersion = new ProjectVersion();\r\n      projectVersion.baseVersionInformation = baseVersionMap[projectTitle];\r\n\r\n      if (this.comboProjects.get(versionAndName[1]) == null)\r\n      {\r\n        this.comboProjects.set(versionAndName[1], new Map());\r\n      }\r\n\r\n      this.comboProjects.get(versionAndName[1]).set(versionAndName[0], projectVersion);\r\n      returnedVersionsParsed.push(versionAndName);\r\n    }\r\n\r\n    return returnedVersionsParsed;\r\n  }\r\n\r\n  ParseAdditionalInfoFromServer(data: Object, versionAndName: [string, string])\r\n  {\r\n    if (versionAndName == null || versionAndName[0] == null || versionAndName[1] == null || \r\n      this.comboProjects.get(versionAndName[1]) == null || this.comboProjects.get(versionAndName[1]).get(versionAndName[0]) == null)\r\n    {\r\n      return\r\n    }\r\n \r\n    let addition_version_information = (data as Map<string, string>);\r\n    this.comboProjects.get(versionAndName[1]).get(versionAndName[0]).additionalVersionInformation = addition_version_information\r\n  }\r\n  \r\n  GetIconSource(remote_url : string) : string{\r\n    console.log(remote_url);\r\n\r\n    if (remote_url.includes(\"github\"))\r\n    {\r\n      return \"../../assets/github.png\";\r\n    }\r\n\r\n    if (remote_url.includes(\"bitbucket\"))\r\n    {\r\n      return \"../../assets/bitbucket.png\";\r\n    }\r\n\r\n    if (remote_url.includes(\"gitlab\"))\r\n    {\r\n      return \"../../assets/gitlab.png\";\r\n    }\r\n    \r\n    return \"../../assets/git.png\";\r\n  }\r\n\r\n  FetchVersionAndNameFromTitle(title: string) : [string, string]\r\n  {\r\n    var match = this.PROJECT_TITLE_REGEX.exec(title);\r\n\r\n    if (match != null && match.length >= Math.max(this.PROJECT_TITLE_REGEX_PROJECT_NAME_GROUP_ID,\r\n      this.PROJECT_TITLE_REGEX_SEMANTIC_VERSION_GROUP_ID))\r\n    {\r\n      let projectName = match[this.PROJECT_TITLE_REGEX_PROJECT_NAME_GROUP_ID];\r\n      let projectSemanticVersion = match[this.PROJECT_TITLE_REGEX_SEMANTIC_VERSION_GROUP_ID];\r\n      return [projectSemanticVersion, projectName]\r\n    }\r\n    else\r\n    {\r\n      return [null, null]\r\n    }\r\n  }\r\n\r\n  CompareSemanticVersionOfKeys(a, b) {\r\n    return -1 * compareVersions(a.key, b.key);\r\n  }\r\n\r\n  SafeGet(versionMap: Map<string,ProjectVersion> , version: string) : Object\r\n  {\r\n    return versionMap?.get(version);\r\n  }\r\n}\r\n","<h1>Combo Projects</h1>\r\n\r\n<mat-form-field class=\"example-form-field\">\r\n  <mat-label>Search Project</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"projectSearchValue\">\r\n  <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"projectSearchValue=''\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-form-field>\r\n\r\n<mat-form-field class=\"example-form-field\">\r\n  <mat-label>Search Version</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"versionSearchValue\">\r\n  <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"versionSearchValue=''\">\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-form-field>\r\n\r\n<button mat-raised-button class=\"upload-project-button\" (click)=\"openUploadSheet()\">Upload New Project</button>\r\n\r\n<mat-accordion>\r\n  <!--List of projects-->\r\n  <ng-template *ngFor=\"let versionsMap of comboProjects | keyvalue\"\r\n    [ngIf]=\"SearchResultsContains(versionsMap.key, projectSearchValue)\">\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <h3>{{ versionsMap.key }} </h3>\r\n      </mat-expansion-panel-header>\r\n\r\n      <!--List of versions for each project-->\r\n      <ng-template *ngFor=\"let version of versionsMap.value | keyvalue: CompareSemanticVersionOfKeys\"\r\n        [ngIf]=\"SearchResultStartsWith(version.key, versionSearchValue)\">\r\n        <mat-expansion-panel>\r\n          <mat-expansion-panel-header>\r\n            <mat-panel-title>\r\n              <h3> {{ version.key }} </h3>\r\n            </mat-panel-title>\r\n            <div class=\"expension-panel\">\r\n              <mat-panel-description>\r\n                <div [ngSwitch]=\"version?.value?.additionalVersionInformation?.src_type\">\r\n                  <div *ngSwitchCase=\"GIT\">\r\n                    <img [src]=\"GetIconSource(version.value.additionalVersionInformation['remote_url'])\" class=\"version-icon\">\r\n                  </div>\r\n                  <div *ngSwitchDefault>\r\n                  </div>\r\n                </div>\r\n              </mat-panel-description>\r\n            </div>\r\n          </mat-expansion-panel-header>\r\n\r\n          <div [ngSwitch]=\"version?.value?.additionalVersionInformation?.src_type\">\r\n            <div *ngSwitchCase=\"GIT\">\r\n              <div class=\"src-type\">\r\n                <div style=\"display: inline\" class=\"property-key\">\r\n                  Source Type:\r\n                </div>\r\n                {{ version.value?.additionalVersionInformation[\"src_type\"] }}\r\n                <br> <br>\r\n              </div>\r\n\r\n              <div class=\"commit-hash\">\r\n                <div style=\"display: inline\" class=\"property-key\">\r\n                  Commit Hash:\r\n                </div>\r\n                {{ version.value?.additionalVersionInformation[\"commit_hash\"] }}\r\n                <br> <br>\r\n              </div>\r\n\r\n              <div class=\"remote-url\">\r\n                <div style=\"display: inline\" class=\"property-key\">\r\n                  Remote URL:\r\n                </div>\r\n                <a href=\"{{ version.value.additionalVersionInformation['remote_url'] }}\" class=\"site\">\r\n                  {{ version.value.additionalVersionInformation['remote_url'] }} </a>\r\n                <br> <br>\r\n              </div>\r\n            </div>\r\n\r\n            <div *ngSwitchDefault>\r\n              <div *ngFor=\"let property of version.value?.additionalVersionInformation | keyvalue\">\r\n                <div class=\"custom-property\" ng-switch-default>\r\n                  <div style=\"display: inline\" class=\"property-key\">\r\n                    {{ property.key }}:\r\n                  </div>\r\n                  {{ property.value }}:\r\n                  <br> <br>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"size\">\r\n              <div style=\"display: inline\" class=\"property-key\">\r\n                Size:\r\n              </div>\r\n              {{ version.value?.baseVersionInformation?.size }}\r\n              <br> <br>\r\n            </div>\r\n\r\n            <div class=\"hash\">\r\n              <div style=\"display: inline\" class=\"property-key\">\r\n                Hash:\r\n              </div>\r\n              {{ version.value?.baseVersionInformation?.hash }}\r\n              <br> <br>\r\n            </div>\r\n  \r\n          </div>\r\n        </mat-expansion-panel>\r\n      </ng-template>\r\n    </mat-expansion-panel>\r\n  </ng-template>\r\n</mat-accordion>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\r\nimport { ComboApiService } from '../combo-api.service'\r\n\r\n@Component({\r\n  selector: 'app-upload-sheet',\r\n  templateUrl: './upload-sheet.component.html',\r\n  styleUrls: ['./upload-sheet.component.scss']\r\n})\r\nexport class UploadSheetComponent implements OnInit {\r\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any, private _comboService: ComboApiService) { }\r\n  \r\n  projectNameValue : string = \"\"\r\n  existingProjectNameValue : string = \"\"\r\n  projectVersionValue : string = \"\"\r\n  selectedVersionType : string = \"\"\r\n  customUploadParamValue : string = \"\";\r\n\r\n  projectTypes : Array<string> = [\"git\", \"other\"]\r\n\r\n  projectUploadParams : Map<string, Array<string>> = new Map();\r\n  projectCustomUploadParams : Map<string, Array<string>> = new Map();\r\n\r\n  projectUploadParamValues : Map<string, string> = new Map();\r\n\r\n  ngOnInit(): void {\r\n    for (let i = 0; i < this.projectTypes.length; i++)\r\n    {\r\n      this._comboService.getUploadParams(this.projectTypes[i]).subscribe(data => {\r\n        this.ParseUploadParams(data, this.projectTypes[i]);\r\n      });\r\n\r\n      this.projectCustomUploadParams.set(this.projectTypes[i], new Array());\r\n    }\r\n  }\r\n\r\n  ParseUploadParams(data: Object, type: string)\r\n  {\r\n    if (type == null)\r\n    {\r\n      return\r\n    }\r\n \r\n    let upload_params = (JSON.parse(data.toString()) as Array<string>);\r\n\r\n    if (upload_params[0].length == 0)\r\n    {\r\n      upload_params.splice(upload_params?.indexOf(\"\"), 1);\r\n    }\r\n\r\n    this.projectUploadParams.set(type, upload_params);\r\n  }\r\n\r\n  AddCustomParam(projectType: string, customParam: string)\r\n  {\r\n    if (projectType == \"\" || customParam == \"\" || this.projectCustomUploadParams.get(projectType).includes(customParam))\r\n    {\r\n      return;\r\n    }\r\n    \r\n    this.projectCustomUploadParams.get(projectType).push(customParam);\r\n  }\r\n\r\n  Upload()\r\n  {\r\n    let isNewProject = (this.projectNameValue != \"\");\r\n    if (isNewProject)\r\n    {\r\n      this._comboService.addProject(this.projectNameValue).subscribe( data=> {\r\n        console.log(data);\r\n      });\r\n    }\r\n\r\n    if (this.projectVersionValue != \"\")\r\n    {\r\n      this.projectUploadParamValues[\"type\"] = this.selectedVersionType;\r\n      this._comboService.addVersion(this.projectNameValue != \"\"?this.projectNameValue:this.existingProjectNameValue,\r\n       this.projectVersionValue, this.projectUploadParamValues).subscribe( data=> {\r\n        console.log(data);\r\n      });\r\n    }\r\n\r\n  }\r\n}\r\n","<button mat-raised-button class=\"upload-project-button\" (click)=\"Upload()\">Upload</button>\r\n<h2>Upload New</h2>\r\n\r\n<mat-form-field class=\"margined-form-field\">\r\n    <mat-label>Existing Project</mat-label>\r\n    <mat-select [(value)]=\"existingProjectNameValue\">\r\n      <mat-option *ngFor=\"let versionsMap of data | keyvalue\" [value]=\"versionsMap.key\">\r\n        {{ versionsMap.key }}\r\n      </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n       <strong> OR </strong>\r\n\r\n<mat-form-field class=\"margined-form-field\">\r\n  <mat-label>New Project Name</mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"projectNameValue\">\r\n  <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"projectNameValue=''\">\r\n      <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-form-field>\r\n\r\n<br>\r\n\r\n<mat-form-field class=\"margined-form-field\">\r\n    <mat-label>Project Version</mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"projectVersionValue\">\r\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"projectVersionValue=''\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-form-field>\r\n\r\n<mat-form-field class=\"margined-form-field\">\r\n    <mat-label>Version Type</mat-label>\r\n    <mat-select [(value)]=\"selectedVersionType\">\r\n      <mat-option *ngFor=\"let projectType of projectTypes\" [value]=\"projectType\">\r\n        {{ projectType }}\r\n      </mat-option>\r\n    </mat-select>\r\n</mat-form-field>\r\n\r\n<br>\r\n\r\n<div *ngFor=\"let uploadParam of projectUploadParams.get(selectedVersionType)\">\r\n  <mat-form-field class=\"margined-form-field\">\r\n    <mat-label> {{ uploadParam }} </mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"projectUploadParamValues[uploadParam]\">\r\n    <button mat-button matSuffix mat-icon-button aria-label=\"Clear\">\r\n        <mat-icon>close</mat-icon>\r\n    </button>\r\n  </mat-form-field>\r\n  <br>\r\n</div>\r\n\r\n<div *ngFor=\"let customUploadParam of projectCustomUploadParams.get(selectedVersionType)\">\r\n  <mat-form-field class=\"margined-form-field\">\r\n    <mat-label> {{ customUploadParam }} </mat-label>\r\n    <input matInput type=\"text\" [(ngModel)]=\"projectUploadParamValues[customUploadParam]\">\r\n    <button mat-button matSuffix mat-icon-button aria-label=\"Remove\"\r\n     (click)=\"projectCustomUploadParams.get(selectedVersionType).splice(projectCustomUploadParams.get(selectedVersionType)?.indexOf(customUploadParam), 1)\">\r\n        <mat-icon>remove</mat-icon>\r\n    </button>\r\n  </mat-form-field>\r\n  <br>\r\n</div>\r\n\r\n<mat-form-field class=\"margined-form-field\">\r\n  <mat-label> Add Custom Param </mat-label>\r\n  <input matInput type=\"text\" [(ngModel)]=\"customUploadParamValue\">\r\n  <button mat-button matSuffix mat-icon-button aria-label=\"Add\"\r\n   (click)=\"AddCustomParam(selectedVersionType, customUploadParamValue)\">\r\n      <mat-icon>add</mat-icon>\r\n  </button>\r\n</mat-form-field>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}